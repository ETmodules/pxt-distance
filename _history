{"entries":[{"timestamp":1736184802253,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"http"],[-1,"s"],[0,"://"],[-1,"developers.google.com/blockly/xml\"><variables></variables>"],[1,"www.w3.org/1999/xhtml\">\n  "],[0,"<blo"]],"start1":12,"start2":12,"length1":70,"length2":37},{"diffs":[[0,"art\""],[-1," x=\"20\" y=\"20\""],[0,"></b"]],"start1":67,"start2":67,"length1":22,"length2":8},{"diffs":[[0,"</block>"],[1,"\n  "],[0,"<block t"]],"start1":72,"start2":72,"length1":16,"length2":19},{"diffs":[[0,"ver\""],[-1," x=\"225\" y=\"20\""],[0,"></b"]],"start1":107,"start2":107,"length1":23,"length2":8},{"diffs":[[0,"</block>"],[1,"\n"],[0,"</xml>"]],"start1":112,"start2":112,"length1":14,"length2":15}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"//% color=\"#EEAA00\" icon=\"\\uf028\"\n//% block=\"ET: Distance\"\n//% block.loc.nl=\"ET: Distance\"\nnamespace EtDistance {\n    let MODULE = \"EtDistance\"\n\n    let EventFrontNormal: EtCommon.eventHandler\n    let EventFrontClose: EtCommon.eventHandler\n    let EventFrontAway: EtCommon.eventHandler\n    let EventLeftNormal: EtCommon.eventHandler\n    let EventLeftClose: EtCommon.eventHandler\n    let EventLeftAway: EtCommon.eventHandler\n    let EventRightNormal: EtCommon.eventHandler\n    let EventRightClose: EtCommon.eventHandler\n    let EventRightAway: EtCommon.eventHandler\n\n    export enum Orientation {\n        //% block=\"front\"\n        //% block.loc.nl=\"recht voor\"\n        ORI_FRONT,\n        //% block=\"left\"\n        //% block.loc.nl=\"links voor\"\n        ORI_LEFT,\n        //% block=\"right\"\n        //% block.loc.nl=\"rechts voor\"\n        ORI_RIGHT\n    }\n\n    export function onEventFront(id: string, signal: string) {\n        if ((signal == \"normal\") && EventFrontNormal)\n            EventFrontNormal(id)\n        else\n            if ((signal == \"close\") && EventFrontClose)\n                EventFrontClose(id)\n            else\n                if ((signal == \"away\") && EventFrontAway)\n                    EventFrontAway(id)\n    }\n\n    export function onEventLeft(id: string, signal: string) {\n        if ((signal == \"normal\") && EventLeftNormal)\n            EventLeftNormal(id)\n        else\n            if ((signal == \"close\") && EventLeftClose)\n                EventLeftClose(id)\n            else\n                if ((signal == \"away\") && EventLeftAway)\n                    EventLeftAway(id)\n    }\n\n    export function onEventRight(id: string, signal: string) {\n        if ((signal == \"normal\") && EventRightNormal)\n            EventRightNormal(id)\n        else\n            if ((signal == \"close\") && EventRightClose)\n                EventRightClose(id)\n            else\n                if ((signal == \"away\") && EventRightAway)\n                    EventRightAway(id)\n    }\n\n    //% block=\"ID\"\n    //% block.loc.nl=\"ID\"\n    export function id(): string {\n        return MODULE\n    }\n\n    //% block=\"set module id to %id\"\n    //% block.loc.nl=\"stel de module id in op %id\"\n    //% id.defl=\"EtAudio\"\n    export function setModuleId(id: string) {\n        MODULE = id\n    }\n\n    //% block=\"when %id measures %comp distance at %ori\"\n    //% block.loc.nl=\"wanneer %id op %ori dichtbij meet\"\n    //% id.defl=\"EtAudio\"\n    export function onDistance(id: string, ori: Orientation, comp: EtCommon.Comparison, programmableCode: () => void): void {\n        let item: EtCommon.eventItem\n        let sig: string = \"normal\"\n        switch (comp) {\n            case EtCommon.Comparison.COMP_LESS: sig = \"close\"; break;\n            case EtCommon.Comparison.COMP_GREATER: sig = \"away\"; break;\n        }\n        switch (ori) {\n            case Orientation.ORI_FRONT: switch (comp) {\n                case EtCommon.Comparison.COMP_NORMAL: EventFrontNormal = programmableCode; break;\n                case EtCommon.Comparison.COMP_LESS: EventFrontClose = programmableCode; break;\n                case EtCommon.Comparison.COMP_GREATER: EventFrontAway = programmableCode; break;\n            }\n                item = { handler: onEventFront, module: id, signal: sig };\n                break;\n            case Orientation.ORI_LEFT: switch (comp) {\n                case EtCommon.Comparison.COMP_NORMAL: EventLeftNormal = programmableCode; break;\n                case EtCommon.Comparison.COMP_LESS: EventLeftClose = programmableCode; break;\n                case EtCommon.Comparison.COMP_GREATER: EventLeftAway = programmableCode; break;\n            }\n                item = { handler: onEventLeft, module: id, signal: sig };\n                break;\n            case Orientation.ORI_RIGHT: switch (comp) {\n                case EtCommon.Comparison.COMP_NORMAL: EventRightNormal = programmableCode; break;\n                case EtCommon.Comparison.COMP_LESS: EventRightClose = programmableCode; break;\n                case EtCommon.Comparison.COMP_GREATER: EventRightAway = programmableCode; break\n            }\n                item = { handler: onEventRight, module: id, signal: sig };\n                break;\n        }\n        EtCommon.eventArray.push(item)\n    }\n}"],[0,"\n"]],"start1":0,"start2":0,"length1":4229,"length2":1}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," \"*\""],[-1,",\n        \"pxt-common\": \"github:ETmodules/pxt-common#0c260cf9992a68f94f34203b42429054d59ab97c\""],[0,"\n"],[1,""],[0,"    "]],"start1":139,"start2":139,"length1":103,"length2":9},{"diffs":[[0,"   \""],[-1,"preferredEditor\": \"tsprj\""],[1,"additionalFilePaths\": []"],[0,"\n}\n"]],"start1":236,"start2":236,"length1":32,"length2":31}]}]},{"timestamp":1736185528278,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"  }\n"],[-1,"        item = { handler: onEventFront, module: id, signal: sig };\n"],[0,"    "]],"start1":4178,"start2":4178,"length1":75,"length2":8}]}]},{"timestamp":1736185546927,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"reak;\n        }\n"],[1,"        item = { handler: onEventFront, module: id, signal: sig };\n"],[0,"        EtCommon"]],"start1":4166,"start2":4166,"length1":32,"length2":99}]}]},{"timestamp":1736185569477,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[1,"//% color=\"#EEAA00\" icon=\"\\uf028\"\n//% block=\"ET: Distance\"\n//% block.loc.nl=\"ET: Distance\"\nnamespace EtDistance {\n    let MODULE = \"EtDistance\"\n\n    let EventFrontNormal: EtCommon.eventHandler\n    let EventFrontClose: EtCommon.eventHandler\n    let EventFrontAway: EtCommon.eventHandler\n    let EventLeftNormal: EtCommon.eventHandler\n    let EventLeftClose: EtCommon.eventHandler\n    let EventLeftAway: EtCommon.eventHandler\n    let EventRightNormal: EtCommon.eventHandler\n    let EventRightClose: EtCommon.eventHandler\n    let EventRightAway: EtCommon.eventHandler\n\n    export enum Orientation {\n        //% block=\"front\"\n        //% block.loc.nl=\"recht voor\"\n        ORI_FRONT,\n        //% block=\"left\"\n        //% block.loc.nl=\"links voor\"\n        ORI_LEFT,\n        //% block=\"right\"\n        //% block.loc.nl=\"rechts voor\"\n        ORI_RIGHT\n    }\n\n    export function onEventFront(id: string, signal: string) {\n        if ((signal == \"normal\") && EventFrontNormal)\n            EventFrontNormal(id)\n        else\n            if ((signal == \"close\") && EventFrontClose)\n                EventFrontClose(id)\n            else\n                if ((signal == \"away\") && EventFrontAway)\n                    EventFrontAway(id)\n    }\n\n    export function onEventLeft(id: string, signal: string) {\n        if ((signal == \"normal\") && EventLeftNormal)\n            EventLeftNormal(id)\n        else\n            if ((signal == \"close\") && EventLeftClose)\n                EventLeftClose(id)\n            else\n                if ((signal == \"away\") && EventLeftAway)\n                    EventLeftAway(id)\n    }\n\n    export function onEventRight(id: string, signal: string) {\n        if ((signal == \"normal\") && EventRightNormal)\n            EventRightNormal(id)\n        else\n            if ((signal == \"close\") && EventRightClose)\n                EventRightClose(id)\n            else\n                if ((signal == \"away\") && EventRightAway)\n                    EventRightAway(id)\n    }\n\n    //% block=\"ID\"\n    //% block.loc.nl=\"ID\"\n    export function id(): string {\n        return MODULE\n    }\n\n    //% block=\"set module id to %id\"\n    //% block.loc.nl=\"stel de module id in op %id\"\n    //% id.defl=\"EtAudio\"\n    export function setModuleId(id: string) {\n        MODULE = id\n    }\n\n    //% block=\"when %id measures %comp distance at %ori\"\n    //% block.loc.nl=\"wanneer %id op %ori dichtbij meet\"\n    //% id.defl=\"EtAudio\"\n    export function onDistance(id: string, ori: Orientation, comp: EtCommon.Comparison, programmableCode: () => void): void {\n        let item: EtCommon.eventItem\n        let sig: string = \"normal\"\n        switch (comp) {\n            case EtCommon.Comparison.COMP_LESS: sig = \"close\"; break;\n            case EtCommon.Comparison.COMP_GREATER: sig = \"away\"; break;\n        }\n        switch (ori) {\n            case Orientation.ORI_FRONT: switch (comp) {\n                case EtCommon.Comparison.COMP_NORMAL: EventFrontNormal = programmableCode; break;\n                case EtCommon.Comparison.COMP_LESS: EventFrontClose = programmableCode; break;\n                case EtCommon.Comparison.COMP_GREATER: EventFrontAway = programmableCode; break;\n            }\n                item = { handler: onEventFront, module: id, signal: sig };\n                break;\n            case Orientation.ORI_LEFT: switch (comp) {\n                case EtCommon.Comparison.COMP_NORMAL: EventLeftNormal = programmableCode; break;\n                case EtCommon.Comparison.COMP_LESS: EventLeftClose = programmableCode; break;\n                case EtCommon.Comparison.COMP_GREATER: EventLeftAway = programmableCode; break;\n            }\n                item = { handler: onEventLeft, module: id, signal: sig };\n                break;\n            case Orientation.ORI_RIGHT: switch (comp) {\n                case EtCommon.Comparison.COMP_NORMAL: EventRightNormal = programmableCode; break;\n                case EtCommon.Comparison.COMP_LESS: EventRightClose = programmableCode; break;\n                case EtCommon.Comparison.COMP_GREATER: EventRightAway = programmableCode; break\n            }\n                item = { handler: onEventRight, module: id, signal: sig };\n                break;\n        }\n        EtCommon.eventArray.push(item)\n    }\n}\n"]],"start1":0,"start2":0,"length1":0,"length2":4229}]}]},{"timestamp":1736186357170,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.ts","patch":[{"diffs":[[-1,"//% color=\"#EEAA00\" icon=\"\\uf028\"\n//% block=\"ET: Distance\"\n//% block.loc.nl=\"ET: Distance\"\nnamespace EtDistance {\n    let MODULE = \"EtDistance\"\n\n    export enum Orientation {\n        //% block=\"front\"\n        //% block.loc.nl=\"recht voor\"\n        ORI_FRONT,\n        //% block=\"left\"\n        //% block.loc.nl=\"links voor\"\n        ORI_LEFT,\n        //% block=\"right\"\n        //% block.loc.nl=\"rechts voor\"\n        ORI_RIGHT\n    }\n\n    let EventFrontNormal: EtCommon.eventHandler\n    let EventFrontClose: EtCommon.eventHandler\n    let EventFrontAway: EtCommon.eventHandler\n    let EventLeftNormal: EtCommon.eventHandler\n    let EventLeftClose: EtCommon.eventHandler\n    let EventLeftAway: EtCommon.eventHandler\n    let EventRightNormal: EtCommon.eventHandler\n    let EventRightClose: EtCommon.eventHandler\n    let EventRightAway: EtCommon.eventHandler\n\n    export function onEventFrontNormal(id: string, signal: string) {\n        if (EventFrontNormal) EventFrontNormal(id)\n    }\n\n    export function onEventFrontClose(id: string, signal: string) {\n        if (EventFrontClose) EventFrontClose(id)\n    }\n\n    export function onEventFrontAway(id: string, signal: string) {\n        if (EventFrontAway) EventFrontAway(id)\n    }\n\n    export function onEventLeftNormal(id: string, signal: string) {\n        if (EventLeftNormal) EventLeftNormal(id)\n    }\n\n    export function onEventLeftClose(id: string, signal: string) {\n        if (EventLeftClose) EventLeftClose(id)\n    }\n\n    export function onEventLeftAway(id: string, signal: string) {\n        if (EventLeftAway) EventLeftAway(id)\n    }\n\n    export function onEventRightNormal(id: string, signal: string) {\n        if (EventRightNormal) EventRightNormal(id)\n    }\n\n    export function onEventRightClose(id: string, signal: string) {\n        if (EventRightClose) EventRightClose(id)\n    }\n\n    export function onEventRightAway(id: string, signal: string) {\n        if (EventRightAway) EventRightAway(id)\n    }\n\n    //% block=\"ID\"\n    //% block.loc.nl=\"ID\"\n    export function id(): string {\n        return MODULE\n    }\n\n    //% block=\"set module id to %id\"\n    //% block.loc.nl=\"stel de module id in op %id\"\n    //% id.defl=\"EtAudio\"\n    export function setModuleId(id: string) {\n        MODULE = id\n    }\n\n    //% block=\"when %id measures %comp distance at %ori\"\n    //% block.loc.nl=\"wanneer %id op %ori dichtbij meet\"\n    //% id.defl=\"EtAudio\"\n    export function onDistance(id: string, ori: Orientation, comp: EtCommon.Comparison, programmableCode: () => void): void {\n        let event: EtCommon.handler\n        let item: EtCommon.eventItem\n        let sig = \"normal\"\n        switch (comp) {\n            case sig = \"close\"; break;\n            case sig = \"away\"; break;\n        }\n        switch (ori) {\n            case Orientation.ORI_FRONT:\n                switch (comp) {\n                    case EtCommon.Comparison.COMP_NORMAL: EventFrontNormal = programmableCode;\n                        event = onEventFrontNormal;\n                        break;\n                    case EtCommon.Comparison.COMP_LESS: EventFrontClose = programmableCode;\n                        event = onEventFrontClose;\n                        break;\n                    case EtCommon.Comparison.COMP_GREATER: EventFrontAway = programmableCode;\n                        event = onEventFrontAway;\n                        break;\n                }\n                break;\n            case Orientation.ORI_LEFT:\n                switch (comp) {\n                    case EtCommon.Comparison.COMP_NORMAL: EventLeftNormal = programmableCode;\n                        event = onEventLeftNormal;\n                        break;\n                    case EtCommon.Comparison.COMP_LESS: EventLeftClose = programmableCode;\n                        event = onEventLeftClose;\n                        break;\n                    case EtCommon.Comparison.COMP_GREATER: EventLeftAway = programmableCode;\n                        event = onEventLeftAway;\n                        break;\n                }\n                break;\n            case Orientation.ORI_RIGHT:\n                switch (comp) {\n                    case EtCommon.Comparison.COMP_NORMAL: EventRightNormal = programmableCode;\n                        event = onEventRightNormal;\n                        break;\n                    case EtCommon.Comparison.COMP_LESS: EventRightClose = programmableCode;\n                        event = onEventRightClose;\n                        break;\n                    case EtCommon.Comparison.COMP_GREATER: EventRightAway = programmableCode;\n                        event = onEventRightAway;\n                        break;\n                }\n                break;\n        }\n        item = { handler: event, module: id, signal: sig };\n        EtCommon.eventArray.push(item)\n    }\n}\n"]],"start1":0,"start2":0,"length1":4783,"length2":0}]}]},{"timestamp":1736186358015,"editorVersion":"7.0.51","changes":[{"type":"edited","filename":"main.blocks","patch":[{"diffs":[[0,"art\""],[-1," id=\"]Q8XwRg~CT7EG}XM[nqF\""],[0," x=\""]],"start1":100,"start2":100,"length1":34,"length2":8},{"diffs":[[0,"ver\""],[-1," id=\"O[n);GUAWiszaNO}vI.L\""],[0," x=\""]],"start1":151,"start2":151,"length1":34,"length2":8}]},{"type":"edited","filename":"main.ts","patch":[{"diffs":[[0,"tFrontNormal(id:"],[1," string, signal:"],[0," string) {\n     "]],"start1":876,"start2":876,"length1":32,"length2":48},{"diffs":[[0,"ntFrontClose(id:"],[1," string, signal:"],[0," string) {\n     "]],"start1":1002,"start2":1002,"length1":32,"length2":48},{"diffs":[[0,"entFrontAway(id:"],[1," string, signal:"],[0," string) {\n     "]],"start1":1125,"start2":1125,"length1":32,"length2":48},{"diffs":[[0,"ntLeftNormal(id:"],[1," string, signal:"],[0," string) {\n     "]],"start1":1247,"start2":1247,"length1":32,"length2":48},{"diffs":[[0,"entLeftClose(id:"],[1," string, signal:"],[0," string) {\n     "]],"start1":1370,"start2":1370,"length1":32,"length2":48},{"diffs":[[0,"ventLeftAway(id:"],[1," string, signal:"],[0," string) {\n     "]],"start1":1490,"start2":1490,"length1":32,"length2":48},{"diffs":[[0,"htNormal(id:"],[1," string, signal:"],[0," string) {\n "]],"start1":1615,"start2":1615,"length1":24,"length2":40},{"diffs":[[0,"ghtClose(id:"],[1," string, signal:"],[0," string) {\n "]],"start1":1741,"start2":1741,"length1":24,"length2":40},{"diffs":[[0,"ightAway(id:"],[1," string, signal:"],[0," string) {\n "]],"start1":1864,"start2":1864,"length1":24,"length2":40},{"diffs":[[0,"event: EtCommon."],[-1,"eventH"],[1,"h"],[0,"andler\n        l"]],"start1":2531,"start2":2531,"length1":38,"length2":33},{"diffs":[[0," let sig"],[-1,": string"],[1," = \"normal\"\n        switch (comp) {\n            case sig = \"close\"; break;\n            case sig = \"away\"; break;\n        }"],[0,"\n       "]],"start1":2599,"start2":2599,"length1":24,"length2":138},{"diffs":[[0,"al;\n"],[-1,"                        sig = \"frontnormal\"\n"],[0,"    "]],"start1":2968,"start2":2968,"length1":52,"length2":8},{"diffs":[[0,"se;\n"],[-1,"                        sig = \"frontclose\"\n"],[0,"    "]],"start1":3142,"start2":3142,"length1":51,"length2":8},{"diffs":[[0,"ay;\n"],[-1,"                        sig = \"frontaway\"\n"],[0,"    "]],"start1":3317,"start2":3317,"length1":50,"length2":8},{"diffs":[[0,"al;\n"],[-1,"                        sig = \"leftnormal\"\n"],[0,"    "]],"start1":3605,"start2":3605,"length1":51,"length2":8},{"diffs":[[0,"se;\n"],[-1,"                        sig = \"leftclose\"\n"],[0,"    "]],"start1":3777,"start2":3777,"length1":50,"length2":8},{"diffs":[[0,"ay;\n"],[-1,"                        sig = \"leftaway\"\n"],[0,"    "]],"start1":3950,"start2":3950,"length1":49,"length2":8},{"diffs":[[0,"al;\n"],[-1,"                        sig = \"rightnormal\"\n"],[0,"    "]],"start1":4241,"start2":4241,"length1":52,"length2":8},{"diffs":[[0,"se;\n"],[-1,"                        sig = \"rightclose\"\n"],[0,"    "]],"start1":4415,"start2":4415,"length1":51,"length2":8},{"diffs":[[0,"ay;\n"],[-1,"                        sig = \"rightaway\"\n"],[0,"    "]],"start1":4590,"start2":4590,"length1":50,"length2":8}]},{"type":"edited","filename":"pxt.json","patch":[{"diffs":[[0," ],\n"],[-1,"    \"testFiles\": [\n        \"test.ts\"\n    ],\n"],[0,"    "]],"start1":325,"start2":325,"length1":52,"length2":8}]},{"type":"added","filename":"test.ts","value":"// tests gaan hier; deze zal niet worden gecompileerd wanneer dit pakket wordt gebruikt als extensie.\n"}]}],"snapshots":[{"timestamp":1736184802252,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"http://www.w3.org/1999/xhtml\">\n  <block type=\"pxt-on-start\"></block>\n  <block type=\"device_forever\"></block>\n</xml>","main.ts":"\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-distance\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"additionalFilePaths\": []\n}\n"}},{"timestamp":1736186606296,"editorVersion":"7.0.51","text":{"main.blocks":"<xml xmlns=\"https://developers.google.com/blockly/xml\"><variables></variables><block type=\"pxt-on-start\" x=\"20\" y=\"20\"></block><block type=\"device_forever\" x=\"225\" y=\"20\"></block></xml>","main.ts":"//% color=\"#EEAA00\" icon=\"\\uf028\"\n//% block=\"ET: Distance\"\n//% block.loc.nl=\"ET: Distance\"\nnamespace EtDistance {\n    let MODULE = \"EtDistance\"\n\n    export enum Orientation {\n        //% block=\"front\"\n        //% block.loc.nl=\"recht voor\"\n        ORI_FRONT,\n        //% block=\"left\"\n        //% block.loc.nl=\"links voor\"\n        ORI_LEFT,\n        //% block=\"right\"\n        //% block.loc.nl=\"rechts voor\"\n        ORI_RIGHT\n    }\n\n    let EventFrontNormal: EtCommon.eventHandler\n    let EventFrontClose: EtCommon.eventHandler\n    let EventFrontAway: EtCommon.eventHandler\n    let EventLeftNormal: EtCommon.eventHandler\n    let EventLeftClose: EtCommon.eventHandler\n    let EventLeftAway: EtCommon.eventHandler\n    let EventRightNormal: EtCommon.eventHandler\n    let EventRightClose: EtCommon.eventHandler\n    let EventRightAway: EtCommon.eventHandler\n\n    export function onEventFrontNormal(id: string) {\n        if (EventFrontNormal) EventFrontNormal(id)\n    }\n\n    export function onEventFrontClose(id: string) {\n        if (EventFrontClose) EventFrontClose(id)\n    }\n\n    export function onEventFrontAway(id: string) {\n        if (EventFrontAway) EventFrontAway(id)\n    }\n\n    export function onEventLeftNormal(id: string) {\n        if (EventLeftNormal) EventLeftNormal(id)\n    }\n\n    export function onEventLeftClose(id: string) {\n        if (EventLeftClose) EventLeftClose(id)\n    }\n\n    export function onEventLeftAway(id: string) {\n        if (EventLeftAway) EventLeftAway(id)\n    }\n\n    export function onEventRightNormal(id: string) {\n        if (EventRightNormal) EventRightNormal(id)\n    }\n\n    export function onEventRightClose(id: string) {\n        if (EventRightClose) EventRightClose(id)\n    }\n\n    export function onEventRightAway(id: string) {\n        if (EventRightAway) EventRightAway(id)\n    }\n\n    //% block=\"ID\"\n    //% block.loc.nl=\"ID\"\n    export function id(): string {\n        return MODULE\n    }\n\n    //% block=\"set module id to %id\"\n    //% block.loc.nl=\"stel de module id in op %id\"\n    //% id.defl=\"EtAudio\"\n    export function setModuleId(id: string) {\n        MODULE = id\n    }\n\n    //% block=\"when %id measures %comp distance at %ori\"\n    //% block.loc.nl=\"wanneer %id op %ori dichtbij meet\"\n    //% id.defl=\"EtAudio\"\n    export function onDistance(id: string, ori: Orientation, comp: EtCommon.Comparison, programmableCode: () => void): void {\n        let event: EtCommon.handler\n        let item: EtCommon.eventItem\n        let sig: string\n        switch (ori) {\n            case Orientation.ORI_FRONT:\n                switch (comp) {\n                    case EtCommon.Comparison.COMP_NORMAL: EventFrontNormal = programmableCode;\n                        event = onEventFrontNormal;\n                        sig = \"frontnormal\"\n                        break;\n                    case EtCommon.Comparison.COMP_LESS: EventFrontClose = programmableCode;\n                        event = onEventFrontClose;\n                        sig = \"frontclose\"\n                        break;\n                    case EtCommon.Comparison.COMP_GREATER: EventFrontAway = programmableCode;\n                        event = onEventFrontAway;\n                        sig = \"frontaway\"\n                        break;\n                }\n                break;\n            case Orientation.ORI_LEFT:\n                switch (comp) {\n                    case EtCommon.Comparison.COMP_NORMAL: EventLeftNormal = programmableCode;\n                        event = onEventLeftNormal;\n                        break;\n                    case EtCommon.Comparison.COMP_LESS: EventLeftClose = programmableCode;\n                        event = onEventLeftClose;\n                        break;\n                    case EtCommon.Comparison.COMP_GREATER: EventLeftAway = programmableCode;\n                        event = onEventLeftAway;\n                        break;\n                }\n                break;\n            case Orientation.ORI_RIGHT:\n                switch (comp) {\n                    case EtCommon.Comparison.COMP_NORMAL: EventRightNormal = programmableCode;\n                        event = onEventRightNormal;\n                        break;\n                    case EtCommon.Comparison.COMP_LESS: EventRightClose = programmableCode;\n                        event = onEventRightClose;\n                        break;\n                    case EtCommon.Comparison.COMP_GREATER: EventRightAway = programmableCode;\n                        event = onEventRightAway;\n                        break;\n                }\n                break;\n        }\n        item = { handler: event, module: id, signal: sig };\n        EtCommon.eventArray.push(item)\n    }\n}\n","README.md":"","pxt.json":"{\n    \"name\": \"pxt-distance\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"radio\": \"*\",\n        \"microphone\": \"*\",\n        \"pxt-common\": \"github:ETmodules/pxt-common#0c260cf9992a68f94f34203b42429054d59ab97c\"\n    },\n    \"files\": [\n        \"main.blocks\",\n        \"main.ts\",\n        \"README.md\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n"}}],"shares":[],"lastSaveTime":1736186885609}